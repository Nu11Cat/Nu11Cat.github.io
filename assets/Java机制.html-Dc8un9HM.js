import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as o,o as r}from"./app-BNYvcKas.js";const c={};function n(i,e){return r(),t("div",null,e[0]||(e[0]=[o('<h2 id="异常" tabindex="-1"><a class="header-anchor" href="#异常"><span>异常</span></a></h2><p>Java 的异常系统是为了处理程序运行时的异常情况，比如除以零、数组越界、空指针引用、文件不存在等等。这些情况如果不处理，可能会导致程序崩溃。</p><p>异常的根类是<code>Throwable</code>，下面分为两类：Error和Exception：</p><p>Error属于系统级的错误，通常是JVM层面的问题，属于严重错误。</p><p>Exception就是我们常见的异常，分为受检异常和非受检异常（也叫运行时异常），受检异常必须捕获处理或向上抛出，非受检异常不强制处理。</p><p>处理异常有三种机制：<code>try-catch-finally</code> 块：用于捕获并处理异常，<code>finally</code> 块无论是否发生异常都会执行，常用于释放资源；<code>throw</code>：用于手动抛出一个异常实例；<code>throws</code>：用于在方法签名中声明该方法可能抛出哪些异常，方便调用者进行处理。</p><p>异常的传播机制：如果一个方法抛出了异常而没有处理，就会沿着调用栈一直向上传递，直到被某一层捕获为止，如果始终没有被捕获，最终 JVM 会终止程序并打印异常堆栈。</p>',7)]))}const s=a(c,[["render",n]]),m=JSON.parse('{"path":"/2.%E9%9D%A2%E8%AF%95%E7%AF%87/2.%E5%85%AB%E8%82%A1%E7%AC%94%E8%AE%B0/Java%E6%9C%BA%E5%88%B6.html","title":"Java机制","lang":"en-US","frontmatter":{"title":"Java机制"},"git":{"createdTime":1748488471000,"updatedTime":1748488471000,"contributors":[{"name":"Nu11Cat","username":"Nu11Cat","email":"2111867383@qq.com","commits":1,"url":"https://github.com/Nu11Cat"}]},"readingTime":{"minutes":1.06,"words":317},"filePathRelative":"2.面试篇/2.八股笔记/Java机制.md"}');export{s as comp,m as data};
