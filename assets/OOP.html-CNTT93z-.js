import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a,o as n}from"./app-BIDAReXf.js";const o={};function s(i,t){return n(),r("div",null,t[0]||(t[0]=[a('<h2 id="深拷贝-浅拷贝-引用拷贝" tabindex="-1"><a class="header-anchor" href="#深拷贝-浅拷贝-引用拷贝"><span>深拷贝，浅拷贝，引用拷贝</span></a></h2><p>深拷贝是完全复制一个对象及其所有嵌套的对象，<strong>包括所有引用对象</strong>。</p><p>浅拷贝是创建一个新的对象，但<strong>对象的属性依然是引用类型时</strong>，这些属性指向的是原对象中相同的内存地址（也就是<strong>引用</strong>不会复制，而是共享）。如果属性是基本数据类型，则会创建一个新值。</p><p>引用拷贝是将<strong>对象的引用</strong>复制一份，这意味着两个引用指向同一个对象。<strong>不会创建新对象</strong>，只是简单地复制了原始引用，栈中的两个变量都指向堆中的同一个对象。</p>',4)]))}const p=e(o,[["render",s]]),l=JSON.parse('{"path":"/2.%E9%9D%A2%E8%AF%95%E7%AF%87/2.%E5%85%AB%E8%82%A1%E7%AC%94%E8%AE%B0/OOP.html","title":"OOP","lang":"en-US","frontmatter":{"title":"OOP"},"git":{"createdTime":1748335679000,"updatedTime":1748335679000,"contributors":[{"name":"Nu11Cat","username":"Nu11Cat","email":"2111867383@qq.com","commits":1,"url":"https://github.com/Nu11Cat"}]},"readingTime":{"minutes":0.62,"words":185},"filePathRelative":"2.面试篇/2.八股笔记/OOP.md"}');export{p as comp,l as data};
