import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as r,o}from"./app-BumUBHGy.js";const a={};function c(n,t){return o(),e("div",null,t[0]||(t[0]=[r('<h3 id="🔹-字符串基本操作" tabindex="-1"><a class="header-anchor" href="#🔹-字符串基本操作"><span>🔹 字符串基本操作</span></a></h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>length()</code></td><td>返回字符串长度</td></tr><tr><td><code>charAt(int index)</code></td><td>获取指定位置字符</td></tr><tr><td><code>substring(int beginIndex)</code></td><td>从索引开始截取到末尾</td></tr><tr><td><code>substring(int beginIndex, int endIndex)</code></td><td>截取指定区间的子串（左闭右开）</td></tr><tr><td><code>indexOf(String str)</code></td><td>查找子串首次出现位置，没找到返回 -1</td></tr><tr><td><code>lastIndexOf(String str)</code></td><td>查找子串最后一次出现的位置</td></tr><tr><td><code>contains(CharSequence s)</code></td><td>判断是否包含某子串</td></tr><tr><td><code>equals(String another)</code></td><td>字符串内容是否相等</td></tr><tr><td><code>equalsIgnoreCase(String another)</code></td><td>忽略大小写判断是否相等</td></tr><tr><td><code>startsWith(String prefix)</code></td><td>是否以某前缀开头</td></tr><tr><td><code>endsWith(String suffix)</code></td><td>是否以某后缀结尾</td></tr></tbody></table><hr><h3 id="🔹-修改-构造字符串" tabindex="-1"><a class="header-anchor" href="#🔹-修改-构造字符串"><span>🔹 修改/构造字符串</span></a></h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>concat(String str)</code></td><td>拼接字符串（也可以用 <code>+</code>）</td></tr><tr><td><code>replace(char oldChar, char newChar)</code></td><td>替换字符</td></tr><tr><td><code>replaceAll(String regex, String replacement)</code></td><td>使用正则替换所有匹配</td></tr><tr><td><code>toLowerCase()</code> / <code>toUpperCase()</code></td><td>转小写 / 大写</td></tr><tr><td><code>trim()</code></td><td>去掉首尾空白字符</td></tr><tr><td><code>split(String regex)</code></td><td>按正则切割成字符串数组</td></tr><tr><td><code>toCharArray()</code></td><td>转为字符数组（适合排序/遍历）</td></tr></tbody></table><hr><h3 id="🔹-stringbuilder-stringbuffer-可变字符串" tabindex="-1"><a class="header-anchor" href="#🔹-stringbuilder-stringbuffer-可变字符串"><span>🔹 StringBuilder/StringBuffer（可变字符串）</span></a></h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>append(...)</code></td><td>添加内容</td></tr><tr><td><code>insert(int offset, ...)</code></td><td>插入</td></tr><tr><td><code>delete(int start, int end)</code></td><td>删除子串</td></tr><tr><td><code>reverse()</code></td><td>反转字符串</td></tr><tr><td><code>toString()</code></td><td>转回不可变字符串</td></tr></tbody></table>',8)]))}const h=d(a,[["render",c]]),l=JSON.parse('{"path":"/2.Algorithm/2.DataStructure/String.html","title":"String","lang":"en-US","frontmatter":{"title":"String"},"git":{"createdTime":1749587569000,"updatedTime":1749587569000,"contributors":[{"name":"Nu11Cat","username":"Nu11Cat","email":"2111867383@qq.com","commits":1,"url":"https://github.com/Nu11Cat"}]},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"2.Algorithm/2.DataStructure/String.md"}');export{h as comp,l as data};
