import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a,o as r}from"./app-DOXQnEnq.js";const p={};function n(s,e){return r(),o("div",null,e[0]||(e[0]=[a('<h2 id="线性-dp" tabindex="-1"><a class="header-anchor" href="#线性-dp"><span>线性 DP</span></a></h2><blockquote><p>状态只与前一两个结果有关，通常是从前往后推导</p><p><strong>常用于：</strong> 爬楼梯、打家劫舍、最大子序和、最长上升子序列</p></blockquote><p><a href="https://leetcode.cn/problems/jump-game/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">55. 跳跃游戏 - 力扣（LeetCode）</a></p><h2 id="区间-dp" tabindex="-1"><a class="header-anchor" href="#区间-dp"><span>区间 DP</span></a></h2><blockquote><p>状态依赖于一个区间的子问题结果，通常双重循环枚举区间</p><p><strong>常用于：</strong> 戳气球、矩阵链乘、回文分割、石头合并</p></blockquote><h2 id="背包-dp" tabindex="-1"><a class="header-anchor" href="#背包-dp"><span>背包 DP</span></a></h2><blockquote><p>给定容量与物品，判断是否能放下、放几件或最大价值</p><p><strong>常用于：</strong> 0-1 背包、完全背包、子集和问题、分割等和子集</p></blockquote><h2 id="树形-dp" tabindex="-1"><a class="header-anchor" href="#树形-dp"><span>树形 DP</span></a></h2><blockquote><p>基于树的结构，通过后序遍历对子问题求解</p><p><strong>常用于：</strong> 树的直径、节点权值选择、最大独立集问题</p></blockquote><h2 id="状态压缩-dp" tabindex="-1"><a class="header-anchor" href="#状态压缩-dp"><span>状态压缩 DP</span></a></h2><blockquote><p>用位运算压缩状态，解决组合数量大的问题</p><p><strong>常用于：</strong> 旅行商问题（TSP）、排列组合类问题、掷骰子和为目标值</p></blockquote><p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">122. 买卖股票的最佳时机 II - 力扣（LeetCode）</a></p><h2 id="匹配类-dp" tabindex="-1"><a class="header-anchor" href="#匹配类-dp"><span>匹配类 DP</span></a></h2><blockquote><p>比较两个字符串或数组之间的匹配关系</p><p><strong>常用于：</strong> 最长公共子序列、编辑距离、正则表达式匹配</p></blockquote><h2 id="选与不选型-dp" tabindex="-1"><a class="header-anchor" href="#选与不选型-dp"><span>选与不选型 DP</span></a></h2><blockquote><p>状态转移中有“选 or 不选”的决策过程</p><p><strong>常用于：</strong> 子集、打家劫舍、股票买卖、多段选择问题</p></blockquote><p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">121. 买卖股票的最佳时机 - 力扣（LeetCode）</a></p>',17)]))}const c=t(p,[["render",n]]),i=JSON.parse('{"path":"/2.Algorithm/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html","title":"动态规划","lang":"en-US","frontmatter":{"title":"动态规划","order":7},"git":{"createdTime":1753189487000,"updatedTime":1753189487000,"contributors":[{"name":"Nu11Cat","username":"Nu11Cat","email":"2111867383@qq.com","commits":1,"url":"https://github.com/Nu11Cat"}]},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"2.Algorithm/Algorithm/动态规划.md"}');export{c as comp,i as data};
